{"mappings":"qUAAA,IAAAA,EAAAC,EAAA,SACO,MAAMC,EACTC,YAAYC,GACRC,KAAKD,UAAYA,C,CAErBE,KAAKC,GACD,MAAMC,EAAiBD,EAASE,QAAQC,QACxCH,EAASG,SAAU,EAAAV,EAAAW,mCAAkCH,EADM,GAE3D,MAAMI,EAAmBJ,EAAeK,UACpCD,EAAiBE,SACjBP,EAASG,QAAQK,UACb,EAACf,EAAAgB,eAAcJ,EAAiBK,OAASjB,EAAAkB,mBAAsBb,KAAKD,UAAUe,OAAOC,aACpFR,EAAiBS,OAClBd,EAASG,QAAQK,WAAY,EAAAf,EAAAsB,c,CAIzCC,UAAUhB,GAEN,OAASA,EAASiB,YACbjB,EAASkB,YACRlB,EAASG,SACXH,EAASG,QAAQI,UACfP,EAASG,QAAQgB,UALV,QAMHnB,EAASG,QAAQgB,UANd,OAOAnB,EAASG,QAAQiB,OAPjB,IAOmCpB,EAASG,QAAQgB,UAPpD,G,CASjBE,MAAMrB,GACEA,EAASG,UACTH,EAASG,QAAQmB,KAAO,EACxBtB,EAASG,QAAQiB,MAAQ,E,CAGjCG,OAAOvB,EAAUwB,GACR1B,KAAKkB,UAAUhB,IAAcA,EAASG,UAG3C,EAAAV,EAAAgC,iBAAgBzB,EAAUA,EAASG,SAAS,EAAMH,EAASE,QAAQC,QAAQG,UAAUoB,QAASF,E","sources":["node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n"],"names":["$i0lBz","parcelRequire","$a5944c69468ffa7f$export$99f6686a87b9ec6f","constructor","container","this","init","particle","opacityOptions","options","opacity","initParticleNumericAnimationValue","opacityAnimation","animation","enable","velocity","getRangeValue","speed","percentDenominator","retina","reduceFactor","sync","getRandom","isEnabled","destroyed","spawning","maxLoops","loops","reset","time","update","delta","updateAnimation","destroy"],"version":3,"file":"OpacityUpdater.5f06ef14.js.map"}