{"mappings":"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","sources":["node_modules/@tsparticles/shape-image/browser/index.js","node_modules/@tsparticles/shape-image/browser/Utils.js","node_modules/@parcel/runtime-js/lib/runtime-c982db90392d2056.js","node_modules/@parcel/runtime-js/lib/runtime-9160bbde33ee7ab0.js","node_modules/@parcel/runtime-js/lib/runtime-b053da4dfd8652a3.js"],"sourcesContent":["import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                const { loadGifImage } = await import(\"./GifUtils/Utils.js\");\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const { ImagePreloaderPlugin } = await import(\"./ImagePreloader.js\"), { ImageDrawer } = await import(\"./ImageDrawer.js\");\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"58FbN\"))).then(() => parcelRequire('bbgOK'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"19SUA\"))).then(() => parcelRequire('fEAf9'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"58FbN\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"aAMlY\"))]).then(() => parcelRequire('1bMSc'));"],"names":["$asyfB","parcelRequire","async","$3c130f66c274e30b$export$4be35e7676465a2d","engine","refresh","loadImage","data","name","src","Error","$i0lBz","errorPrefix","images","find","t","source","image","gif","type","substring","length","error","loading","replaceColor","ratio","width","height","undefined","imageFunc","push","loadGifImage","downloadSvgImage","$3c130f66c274e30b$var$addLoadImageToEngine","ImagePreloaderPlugin","ImageDrawer","preloader","addPlugin","addShape","$79d7166231e887fc$var$currentColorRegex","$79d7166231e887fc$export$fe58198efe02b173","Promise","resolve","img","Image","element","addEventListener","getLogger","$79d7166231e887fc$export$4b83b5a5338ae9dc","response","fetch","ok","svgData","text","$79d7166231e887fc$export$49424b6b83198c61","imageData","color","particle","svgColoredData","imageShape","opacity","colorStyle","getStyleFromHsl","includes","replace","preFillIndex","indexOf","$79d7166231e887fc$var$replaceColorSvg","value","imageRes","loaded","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","img2","errorHandler","module","exports","import","then","all"],"version":3,"file":"browser.1d6b86f2.js.map"}