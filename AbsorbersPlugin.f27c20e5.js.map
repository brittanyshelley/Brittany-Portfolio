{"mappings":"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","sources":["node_modules/@tsparticles/plugin-absorbers/browser/AbsorbersPlugin.js","node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/Absorber.js","node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSize.js","node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSizeLimit.js","node_modules/@parcel/runtime-js/lib/runtime-97744f7de22af715.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nexport class AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    async getPlugin(container) {\n        const { Absorbers } = await import(\"./Absorbers.js\");\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"@tsparticles/engine\";\nimport { AbsorberSize } from \"./AbsorberSize.js\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"@tsparticles/engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit.js\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"9ENzS\"))).then(() => parcelRequire('b72Ca'));"],"names":["$i0lBz","parcelRequire","$bcfb6098aadf3909$export$32787437990ce8bc","constructor","this","id","async","container","Absorbers","loadOptions","options","source","needsPlugin","absorbers","executeOnSingleOrMultiple","absorber","tmp","$iCNdJ","Absorber","load","interactivity","modes","isArray","length","events","onClick","mode","isInArray","$d8f1f4c530df0999$export$d814bc42ca06f7f3","color","OptionsColor","value","draggable","opacity","destroy","orbits","size","$lp4sT","AbsorberSize","data","undefined","create","name","position","x","setRangeValue","y","$040568dcb3dae171$export$d8af9fbad354c15b","ValueWithRandom","super","density","limit","$3JyuE","AbsorberSizeLimit","isNumber","radius","$2b8054bd4b2d89ea$export$d9c489b7422f439","mass","module","exports","import","resolve","then"],"version":3,"file":"AbsorbersPlugin.f27c20e5.js.map"}