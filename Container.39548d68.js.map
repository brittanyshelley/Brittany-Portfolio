{"mappings":"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","sources":["node_modules/@tsparticles/engine/browser/Core/Container.js","node_modules/@tsparticles/engine/browser/Core/Canvas.js","node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","node_modules/@tsparticles/engine/browser/Core/Particles.js","node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","node_modules/@tsparticles/engine/browser/Core/Particle.js","node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","node_modules/@tsparticles/engine/browser/Core/Retina.js"],"sourcesContent":["import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2;\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(\"particleDestroyed\", {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n"],"names":["$3dnor","parcelRequire","$60610b561a98714d$var$guardCheck","container","destroyed","$60610b561a98714d$var$loadContainerOptions","engine","sourceOptionsArr","options","$3sY7h","Options","$9O1eh","loadOptions","$60610b561a98714d$export$42a852a2b6b56249","constructor","id","sourceOptions","this","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","_smooth","undefined","_lastFrameTime","millisecondsToSeconds","fpsLimit","draw","delta","value","smooth","factor","$60610b561a98714d$var$initDelta","addLifeTime","particles","alive","destroy","animationStatus","e","$akXGd","getLogger","error","errorPrefix","_engine","Symbol","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","$7xvqz","Retina","canvas","$9iSuT","Canvas","$gtU9p","Particles","pathGenerators","Map","mouse","clicking","inside","plugins","effectDrawers","shapeDrawers","_options","_eventListeners","$gFMde","EventListeners","_intersectionObserver","safeIntersectionObserver","dispatchEvent","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","touched","touchMoved","addEventListener","mouseEvent","offsetX","clientX","offsetY","clientY","touchEvent","lengthOffset","lastTouch","touches","length","changedTouches","canvasRect","getBoundingClientRect","minCoordinate","left","top","Math","max","radiusX","radiusY","addPath","key","generator","override","has","set","stop","effectDrawer","shapeDrawer","keys","delete","key1","clearPlugins","mainArr","dom","idx","findIndex","t","deleteCount","splice","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","async","type","plugin","export","res","supported","blob","handleClickMode","mode","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","type1","drawer1","getShapeDrawer","initPlugins","availablePlugins","getAvailablePlugins","init","updateActualOptions","initBackground","resize","$iOcOh","getRangeValue","duration","delay","drawer2","drawer3","plugin1","setDensity","plugin2","particlesSetup","name","_currentTheme","refresh","cancelAnimationFrame","needsUpdate","autoPlay","start","Promise","resolve","addListeners","HTMLElement","observe","_delayTimeout","setTimeout","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","_responsiveMaxWidth","$bwDqI","$6c601187926b5e23$var$setTransformValue","newFactor","newValue","$6c601187926b5e23$var$setStyle","style","important","elementStyle","setProperty","$6c601187926b5e23$export$8d01c972ee8b14a9","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","$lPrU0","rangeColorToHsl","particleStrokeColor","_initCover","cover","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","reject","image","img","document","createElement","_coverImage","evt","src","_initStyle","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","move","trailFill","enable","fillColor","_trailFill","_paintBase","baseColor","paintBase","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","attributes","originalStyle","_mutationObserver","position","zIndex","fullScreen","toString","height","_context","_generated","paint","remove","cb","drawAsync","drawParticle","spawning","getRadius","pfColor","getFillColor","psColor","getStrokeColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","attributeName","initUpdaters","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","push","updaters","loadCanvas","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","setResizeFactor","needsRefresh","$c235dfa3e3f40f04$var$manageListener","event","handler","add","addOptions","passive","$8ch2r","isBoolean","capture","removeOptions","removeEventListener","$c235dfa3e3f40f04$export$b20b719ec758a20f","_doMouseTouchClick","_canPush","mouseInteractivity","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","_handleWindowResize","_resizeTimeout","handleResize","windowResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","resizeEvent","_resizeObserver","_mouseDown","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","startsWith","clientRect","source","currentTarget","sourceRect","targetRect","canvasRect1","defaultCoordinate","_touchEnd","Array","from","touch","_touches","identifier","_touchEndClick","_touchStart","performance","now","$bffae92adc5a165a$var$qTreeRectangle","canvasSize","$2ptyF","Rectangle","$bffae92adc5a165a$export$ec4bceef241d2e36","_addToPool","_pool","_applyDensity","manualCount","group","numberOptions","number","density","_limit","limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","min","particlesCount","count","filter","abs","removeQuantity","densityOptions","_container","_pushParticle","overrideOptions","initializer","pop","$7V7Be","Particle","_nextId","canAdd","_array","_zArray","data","warning","_removeParticle","index","zIdx","indexOf","_needsSort","_lastZIndex","_interactionManager","$2fi1C","InteractionManager","_pluginsInitialized","$8IgBO","QuadTree","movers","addManualParticles","manualParticles","addParticle","getPosition","limitOptions","get","currentCount","countToRemove","update","p","condition","particlesInitialization","particlesOptions","groups","groupOptions","i","j","i1","getMovers","getUpdaters","pathGenerator","nb","removeAt","quantity","deleted","setLastZIndex","_resizeFactor","particlesToDelete","Set","resizeFactor","ignoresResizeRatio","initialPosition","reset","particleUpdate","mover","isEnabled","insert","$8D3wD","Point","checkDelete","particle1","externalInteract","particle2","particlesInteract","zArray","sort","b","z","$1a2af6ea1d00698e$export$aaa80641d584351c","_interactors","_externalInteractors","_particleInteractors","interactor","interact","getInteractors","interactor1","$3lNZp","$5c43c05f6b3bee92$var$half","$5c43c05f6b3bee92$var$fixOutMode","isInArray","outMode","checkModes","diameter","coord","maxCoord","setCb","$5c43c05f6b3bee92$export$c36c68baa13912a5","_calcPosition","tryCount","pluginPos","particlePosition","Vector3d","create","exactPosition","calcExactPositionOrRandomFromSize","outModes","fixHorizontal","fixVertical","right","bottom","_checkOverlap","increment","_calculateVelocity","getParticleBaseVelocity","direction","copy","moveOptions","rad","degToRad","angle","radOffset","offset","range","straight","randomInRange","setRangeValue","random","speed","getRandom","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","getDistance","_getRollColor","roll","backColor","alter","backFactor","horizontal","vertical","$5c43c05f6b3bee92$var$double","backSum","PI","floor","alterHsl","_initPosition","zIndexValue","clamp","moveCenter","center","getParticleDirectionAngle","outType","Vector","origin","unbreakable","inRange","slow","shape","particleDestroy","particleDestroyed","getHslFromAnimation","getMass","strokeColor","effectClose","effectFill","shapeClose","shapeFill","pathRotation","lastPathTime","rotation","misplaced","maxDistance","mainOptions","loadParticlesOptions","effectType","effect","shapeType","reduceDuplicates","itemFromSingleOrMultiple","effectOptions","shapeOptions","overrideEffectType","load","overrideShapeType","effectData","close","$5c43c05f6b3bee92$var$loadEffectData","shapeData","$5c43c05f6b3bee92$var$loadShapeData","$iWtKM","Interactivity","pathOptions","path","pathDelay","getPathGenerator","initParticle","initParticleNumericAnimationValue","initialVelocity","velocity","moveDecay","decay","sides","loadEffect","loadShape","sideCountFunc","getSidesCount","shadowColor","particleInit","particleCreated","isInsideCanvas","isVisible","$657f50fa3099853a$var$half","$657f50fa3099853a$export$b82688eb02220411","rectangle","capacity","_subdivide","fixedIndex","_subs","round","_divided","_points","point","contains","some","sub","query","check","intersects","Circle","queryRectangle","$57d3fe5152b380f3$export$b7a992a6d33e9eff","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","maxSpeed","gravity","sizeAnimationSpeed","animation","moveDistance","distance","props","moveDrift","drift","moveSpeed"],"version":3,"file":"Container.39548d68.js.map"}